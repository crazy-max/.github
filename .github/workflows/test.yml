name: test

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

jobs:
  releases-json:
    uses: ./.github/workflows/releases-json.yml
    with:
      repository: docker/buildx
      artifact_name: buildx-releases-json
      filename: buildx-releases.json
    secrets: inherit

  releases-json-check:
    runs-on: ubuntu-latest
    needs:
      - releases-json
    steps:
      -
        name: Download
        uses: actions/download-artifact@v4
        with:
          name: buildx-releases-json
          path: .
      -
        name: Check file
        run: |
          jq . buildx-releases.json

  install-k3s:
    runs-on: ubuntu-20.04
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Install k3s
        uses: ./.github/actions/install-k3s
        with:
          version: v1.21.2-k3s1

  list-commits:
    uses: ./.github/workflows/list-commits.yml
    with:
      limit: 5
    secrets: inherit

  list-commits-check:
    runs-on: ubuntu-latest
    needs:
      - list-commits
    strategy:
      fail-fast: false
      matrix:
        commit: ${{ fromJson(needs.list-commits.outputs.matrix) }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ matrix.commit }}

  container-logs-check:
    runs-on: ubuntu-20.04
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Run container
        run: |
          docker run -d --name test crazymax/samba:latest
      -
        name: Check container logs
        uses: ./.github/actions/container-logs-check
        with:
          container_name: test
          log_check: " started."
          timeout: 20

  container-logs-check-notfound:
    runs-on: ubuntu-20.04
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Run container
        run: |
          docker run -d --name test crazymax/samba:latest
      -
        name: Check container logs
        id: check
        continue-on-error: true
        uses: ./.github/actions/container-logs-check
        with:
          container_name: test
          log_check: " foo."
          timeout: 10
      -
        name: Check
        run: |
          if [ "${{ steps.check.outcome }}" != "failure" ] || [ "${{ steps.check.conclusion }}" != "success" ]; then
            echo "::error::Should have failed"
            exit 1
          fi

  container-logs-check-failed:
    runs-on: ubuntu-20.04
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Run container
        run: |
          docker run -d --name test --entrypoint '' crazymax/samba:latest sh -c "echo 'foo' && exit 1"
      -
        name: Check container logs
        id: check
        continue-on-error: true
        uses: ./.github/actions/container-logs-check
        with:
          container_name: test
          log_check: " foo."
          timeout: 10
      -
        name: Check
        run: |
          if [ "${{ steps.check.outcome }}" != "failure" ] || [ "${{ steps.check.conclusion }}" != "success" ]; then
            echo "::error::Should have failed"
            exit 1
          fi
